version: '3.4'

services:
  consul:
    image: "consul:1.15.4"


  rabbitmq:
    image: "rabbitmq:3-management"

  s_log_db:
    image: "postgres:latest"
    
  web.gateway:
    image: ${DOCKER_REGISTRY-}webgateway
    build:
      context: .
      dockerfile: src/ApiGateways/Web/Web.Gateway/Dockerfile
    ports:
     - "5000:5000"


  catalogservice.api:
    image: ${DOCKER_REGISTRY-}catalogserviceapi
    build:
      context: .
      dockerfile: src/Services/CatalogService/CatalogService.API/Dockerfile

  catalogservice.db:
    image: postgres:latest
       

  identityservice.api:
    image: ${DOCKER_REGISTRY-}identityserviceapi
    build:
      context: .
      dockerfile: src/Services/IdentityService/IdentityService.API/Dockerfile
   
  identityservice.db:
    image: postgres:latest  


  commentservice.api:
    image: ${DOCKER_REGISTRY-}commentserviceapi
    build:
      context: .
      dockerfile: src/Services/CommentService/CommentService/Dockerfile

  commentservice.db:
     image: mongo


  basketservice.api:
    image: ${DOCKER_REGISTRY-}basketserviceapi
    build:
      context: .
      dockerfile: src/Services/BasketService/BasketService.API/Dockerfile
  
  basketservice.db:
    image: "redis:latest"


  notificationservice.api:
    image: ${DOCKER_REGISTRY-}notificationserviceapi
    build:
      context: .
      dockerfile: src/Services/NotificationService/NotificationService.API/Dockerfile


  orderservice.api:
    image: ${DOCKER_REGISTRY-}orderserviceapi
    build:
      context: .
      dockerfile: src/Services/OrderService/OrderService.API/Dockerfile
  
  orderservice.db:
    image: postgres:latest

  paymentservice.api:
    image: ${DOCKER_REGISTRY-}paymentserviceapi
    build:
      context: .
      dockerfile: src/Services/PaymentService/PaymentService.API/Dockerfile

volumes:
  catalogdb_volume:
  rabbitmq_volume:  
  identitydb_volume:  
  commentdb_volume:
  basketdb_volume:
  orderdb_volume:
  logdb_volume:
  catalogservicephotos_volume:  